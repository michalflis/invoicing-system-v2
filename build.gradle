buildscript {
    ext {
        flywayVersion = '8.0.1'
        h2Version = '1.4.200'
        lombokVersion = '1.18.18'
        postgresqlVersion = '42.2.19'
        spockVersion = '1.3-groovy-2.5'
        springBootVersion = '2.4.2'
        springDependencyManagementVersion = '1.0.11.RELEASE'
        springFoxStarterVersion = '3.0.0'
        springFoxUiVersion = '3.0.0'
        mapStructVersion = '1.3.1.Final'
    }
}

plugins {
    id 'checkstyle'
    id 'groovy'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
}

repositories {
    mavenCentral()
}

dependencies {

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation "io.springfox:springfox-boot-starter:${springFoxStarterVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springFoxUiVersion}"
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"


    runtimeOnly "com.h2database:h2:${h2Version}"
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "pl/futurecollars/invoicing/dto/mappers/*"
            ])
        }))
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

test {
    finalizedBy jacocoTestReport
}

check {
    finalizedBy jacocoTestCoverageVerification
}
